{
  "cacheItemsMap": {
    "docs/button.mdx": {
      "document": {
        "title": "Button",
        "description": "Displays a button or a component that looks like a button. \r",
        "published": true,
        "featured": false,
        "component": false,
        "toc": true,
        "body": {
          "raw": "\r\n\r\n## Installation\r\n\r\n<Tabs defaultValue=\"cli\">\r\n\r\n<TabsList>\r\n  <TabsTrigger value=\"cli\">CLI</TabsTrigger>\r\n  <TabsTrigger value=\"manual\">Manual</TabsTrigger>\r\n</TabsList>\r\n<TabsContent value=\"cli\">\r\n\r\n```bash\r\nnpx shadcn@latest add button\r\n```\r\n\r\n</TabsContent>\r\n\r\n<TabsContent value=\"manual\">\r\n\r\n<Steps>\r\n\r\n<Step>Install the following dependencies:</Step>\r\n\r\n```bash\r\nnpm install @radix-ui/react-slot\r\n```\r\n\r\n<Step>Copy and paste the following code into your project.</Step>\r\n\r\n<ComponentSource name=\"button\" />\r\n\r\n<Step>Update the import paths to match your project setup.</Step>\r\n\r\n</Steps>\r\n\r\n</TabsContent>\r\n\r\n</Tabs>\r\n\r\n## Usage\r\n\r\n```tsx\r\nimport { Button } from \"@/components/ui/button\"\r\n```\r\n\r\n```tsx\r\n<Button variant=\"outline\">Button</Button>\r\n```\r\n\r\n## Link\r\n\r\nYou can use the `buttonVariants` helper to create a link that looks like a button.\r\n\r\n```tsx\r\nimport { buttonVariants } from \"@/components/ui/button\"\r\n```\r\n\r\n```tsx\r\n<Link className={buttonVariants({ variant: \"outline\" })}>Click here</Link>\r\n```\r\n\r\nAlternatively, you can set the `asChild` parameter and nest the link component.\r\n\r\n```tsx\r\n<Button asChild>\r\n  <Link href=\"/login\">Login</Link>\r\n</Button>\r\n```\r\n\r\n",
          "code": "var Component=(()=>{var f=Object.create;var l=Object.defineProperty;var x=Object.getOwnPropertyDescriptor;var k=Object.getOwnPropertyNames;var C=Object.getPrototypeOf,L=Object.prototype.hasOwnProperty;var T=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),y=(t,e)=>{for(var o in e)l(t,o,{get:e[o],enumerable:!0})},h=(t,e,o,r)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let a of k(e))!L.call(t,a)&&a!==o&&l(t,a,{get:()=>e[a],enumerable:!(r=x(e,a))||r.enumerable});return t};var j=(t,e,o)=>(o=t!=null?f(C(t)):{},h(e||!t||!t.__esModule?l(o,\"default\",{value:t,enumerable:!0}):o,t)),v=t=>h(l({},\"__esModule\",{value:!0}),t);var m=T((S,p)=>{p.exports=_jsx_runtime});var _={};y(_,{default:()=>b,frontmatter:()=>N});var n=j(m()),N={title:\"Button\",description:\"Displays a button or a component that looks like a button.\"};function g(t){let e={code:\"code\",h2:\"h2\",p:\"p\",pre:\"pre\",...t.components},{ComponentSource:o,Step:r,Steps:a,Tabs:d,TabsContent:c,TabsList:u,TabsTrigger:s}=e;return o||i(\"ComponentSource\",!0),r||i(\"Step\",!0),a||i(\"Steps\",!0),d||i(\"Tabs\",!0),c||i(\"TabsContent\",!0),u||i(\"TabsList\",!0),s||i(\"TabsTrigger\",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h2,{children:\"Installation\"}),`\n`,(0,n.jsxs)(d,{defaultValue:\"cli\",children:[(0,n.jsxs)(u,{children:[(0,n.jsx)(s,{value:\"cli\",children:\"CLI\"}),(0,n.jsx)(s,{value:\"manual\",children:\"Manual\"})]}),(0,n.jsx)(c,{value:\"cli\",children:(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-bash\",children:`npx shadcn@latest add button\n`})})}),(0,n.jsx)(c,{value:\"manual\",children:(0,n.jsxs)(a,{children:[(0,n.jsx)(r,{children:\"Install the following dependencies:\"}),(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-bash\",children:`npm install @radix-ui/react-slot\n`})}),(0,n.jsx)(r,{children:\"Copy and paste the following code into your project.\"}),(0,n.jsx)(o,{name:\"button\"}),(0,n.jsx)(r,{children:\"Update the import paths to match your project setup.\"})]})})]}),`\n`,(0,n.jsx)(e.h2,{children:\"Usage\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-tsx\",children:`import { Button } from \"@/components/ui/button\"\n`})}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-tsx\",children:`<Button variant=\"outline\">Button</Button>\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"Link\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"You can use the \",(0,n.jsx)(e.code,{children:\"buttonVariants\"}),\" helper to create a link that looks like a button.\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-tsx\",children:`import { buttonVariants } from \"@/components/ui/button\"\n`})}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-tsx\",children:`<Link className={buttonVariants({ variant: \"outline\" })}>Click here</Link>\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Alternatively, you can set the \",(0,n.jsx)(e.code,{children:\"asChild\"}),\" parameter and nest the link component.\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-tsx\",children:`<Button asChild>\\r\n  <Link href=\"/login\">Login</Link>\\r\n</Button>\n`})})]})}function b(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,{...t,children:(0,n.jsx)(g,{...t})}):g(t)}function i(t,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+t+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return v(_);})();\n;return Component;"
        },
        "_id": "docs/button.mdx",
        "_raw": {
          "sourceFilePath": "docs/button.mdx",
          "sourceFileName": "button.mdx",
          "sourceFileDir": "docs",
          "contentType": "mdx",
          "flattenedPath": "docs/button"
        },
        "type": "Doc",
        "slug": "/docs/button",
        "slugAsParams": "button"
      },
      "documentHash": "1732715642231",
      "hasWarnings": false,
      "documentTypeName": "Doc"
    }
  }
}
