{
  "cacheItemsMap": {
    "docs/button.mdx": {
      "document": {
        "title": "Button",
        "description": "Displays a button or a component that looks like a button. \r",
        "body": {
          "raw": "# Button \r\n<ComponentPreview name=\"button-demo\" description=\"A button\" />\r\n\r\n\r\n## Usage\r\n\r\n```tsx\r\nimport { Button } from \"@/components/ui/button\"\r\n\r\n<Button variant=\"outline\">Button</Button>\r\n```\r\n\r\n## Link\r\n\r\nYou can use the `buttonVariants` helper to create a link that looks like a button.\r\n\r\n```tsx\r\nimport { buttonVariants } from \"@/components/ui/button\"\r\n```\r\n\r\n```tsx\r\n<Link className={buttonVariants({ variant: \"outline\" })}>Click here</Link>\r\n```\r\n\r\nAlternatively, you can set the `asChild` parameter and nest the link component.\r\n\r\n```tsx\r\n<Button asChild>\r\n  <Link href=\"/login\">Login</Link>\r\n</Button>\r\n```\r\n\r\n## Examples\r\n\r\n### Primary\r\n\r\n<ComponentPreview name=\"button-demo\" description=\"A primary button\" />\r\n\r\n### Secondary\r\n\r\n<ComponentPreview name=\"button-secondary\" description=\"A secondary button\" />\r\n\r\n### Destructive\r\n\r\n<ComponentPreview\r\n  name=\"button-destructive\"\r\n  description=\"A destructive button\"\r\n/>\r\n\r\n### Outline\r\n\r\n<ComponentPreview\r\n  name=\"button-outline\"\r\n  description=\"A button using the outline variant.\"\r\n/>\r\n\r\n### Ghost\r\n\r\n<ComponentPreview\r\n  name=\"button-ghost\"\r\n  description=\"A button using the ghost variant\"\r\n/>\r\n\r\n### Link\r\n\r\n<ComponentPreview\r\n  name=\"button-link\"\r\n  description=\"A button using the link variant.\"\r\n/>\r\n\r\n### Icon\r\n\r\n<ComponentPreview name=\"button-icon\" description=\"An icon button\" />\r\n\r\n### With Icon\r\n\r\n<ComponentPreview name=\"button-with-icon\" description=\"A button with an icon\" />\r\n\r\n### Loading\r\n\r\n<ComponentPreview\r\n  name=\"button-loading\"\r\n  description=\"A button with a loading state.\"\r\n/>\r\n\r\n### As Child\r\n\r\n<ComponentPreview\r\n  name=\"button-as-child\"\r\n  description=\"A button wrapping a custom Link component\"\r\n/>\r\n\r\n## Changelog\r\n\r\n### 2024-10-16 Classes for icons\r\n\r\nAdded `gap-2 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0` to the button to automatically style icon inside the button.\r\n\r\nAdd the following classes to the `cva` call in your `button.tsx` file.\r\n\r\n```diff showLineNumbers title=\"button.tsx\"\r\nconst buttonVariants = cva(\r\n  \"inline-flex ... gap-2 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\"\r\n)\r\n```",
          "code": "var Component=(()=>{var u=Object.create;var r=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var v=(e,n)=>()=>(n||e((n={exports:{}}).exports,n),n.exports),f=(e,n)=>{for(var o in n)r(e,o,{get:n[o],enumerable:!0})},a=(e,n,o,c)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let i of m(n))!b.call(e,i)&&i!==o&&r(e,i,{get:()=>n[i],enumerable:!(c=p(n,i))||c.enumerable});return e};var k=(e,n,o)=>(o=e!=null?u(g(e)):{},a(n||!e||!e.__esModule?r(o,\"default\",{value:e,enumerable:!0}):o,e)),x=e=>a(r({},\"__esModule\",{value:!0}),e);var l=v((C,s)=>{s.exports=_jsx_runtime});var _={};f(_,{default:()=>h,frontmatter:()=>A});var t=k(l()),A={title:\"Button\",description:\"Displays a button or a component that looks like a button.\"};function d(e){let n={code:\"code\",h1:\"h1\",h2:\"h2\",h3:\"h3\",p:\"p\",pre:\"pre\",...e.components},{ComponentPreview:o}=n;return o||y(\"ComponentPreview\",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{children:\"Button\"}),`\n`,(0,t.jsx)(o,{name:\"button-demo\",description:\"A button\"}),`\n`,(0,t.jsx)(n.h2,{children:\"Usage\"}),`\n`,(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:\"language-tsx\",children:`import { Button } from \"@/components/ui/button\"\\r\n\\r\n<Button variant=\"outline\">Button</Button>\n`})}),`\n`,(0,t.jsx)(n.h2,{children:\"Link\"}),`\n`,(0,t.jsxs)(n.p,{children:[\"You can use the \",(0,t.jsx)(n.code,{children:\"buttonVariants\"}),\" helper to create a link that looks like a button.\"]}),`\n`,(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:\"language-tsx\",children:`import { buttonVariants } from \"@/components/ui/button\"\n`})}),`\n`,(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:\"language-tsx\",children:`<Link className={buttonVariants({ variant: \"outline\" })}>Click here</Link>\n`})}),`\n`,(0,t.jsxs)(n.p,{children:[\"Alternatively, you can set the \",(0,t.jsx)(n.code,{children:\"asChild\"}),\" parameter and nest the link component.\"]}),`\n`,(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:\"language-tsx\",children:`<Button asChild>\\r\n  <Link href=\"/login\">Login</Link>\\r\n</Button>\n`})}),`\n`,(0,t.jsx)(n.h2,{children:\"Examples\"}),`\n`,(0,t.jsx)(n.h3,{children:\"Primary\"}),`\n`,(0,t.jsx)(o,{name:\"button-demo\",description:\"A primary button\"}),`\n`,(0,t.jsx)(n.h3,{children:\"Secondary\"}),`\n`,(0,t.jsx)(o,{name:\"button-secondary\",description:\"A secondary button\"}),`\n`,(0,t.jsx)(n.h3,{children:\"Destructive\"}),`\n`,(0,t.jsx)(o,{name:\"button-destructive\",description:\"A destructive button\"}),`\n`,(0,t.jsx)(n.h3,{children:\"Outline\"}),`\n`,(0,t.jsx)(o,{name:\"button-outline\",description:\"A button using the outline variant.\"}),`\n`,(0,t.jsx)(n.h3,{children:\"Ghost\"}),`\n`,(0,t.jsx)(o,{name:\"button-ghost\",description:\"A button using the ghost variant\"}),`\n`,(0,t.jsx)(n.h3,{children:\"Link\"}),`\n`,(0,t.jsx)(o,{name:\"button-link\",description:\"A button using the link variant.\"}),`\n`,(0,t.jsx)(n.h3,{children:\"Icon\"}),`\n`,(0,t.jsx)(o,{name:\"button-icon\",description:\"An icon button\"}),`\n`,(0,t.jsx)(n.h3,{children:\"With Icon\"}),`\n`,(0,t.jsx)(o,{name:\"button-with-icon\",description:\"A button with an icon\"}),`\n`,(0,t.jsx)(n.h3,{children:\"Loading\"}),`\n`,(0,t.jsx)(o,{name:\"button-loading\",description:\"A button with a loading state.\"}),`\n`,(0,t.jsx)(n.h3,{children:\"As Child\"}),`\n`,(0,t.jsx)(o,{name:\"button-as-child\",description:\"A button wrapping a custom Link component\"}),`\n`,(0,t.jsx)(n.h2,{children:\"Changelog\"}),`\n`,(0,t.jsx)(n.h3,{children:\"2024-10-16 Classes for icons\"}),`\n`,(0,t.jsxs)(n.p,{children:[\"Added \",(0,t.jsx)(n.code,{children:\"gap-2 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\"}),\" to the button to automatically style icon inside the button.\"]}),`\n`,(0,t.jsxs)(n.p,{children:[\"Add the following classes to the \",(0,t.jsx)(n.code,{children:\"cva\"}),\" call in your \",(0,t.jsx)(n.code,{children:\"button.tsx\"}),\" file.\"]}),`\n`,(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:\"language-diff\",children:`const buttonVariants = cva(\\r\n  \"inline-flex ... gap-2 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\"\\r\n)\n`})})]})}function h(e={}){let{wrapper:n}=e.components||{};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}function y(e,n){throw new Error(\"Expected \"+(n?\"component\":\"object\")+\" `\"+e+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return x(_);})();\n;return Component;"
        },
        "_id": "docs/button.mdx",
        "_raw": {
          "sourceFilePath": "docs/button.mdx",
          "sourceFileName": "button.mdx",
          "sourceFileDir": "docs",
          "contentType": "mdx",
          "flattenedPath": "docs/button"
        },
        "type": "Doc",
        "slug": "/docs/button",
        "slugAsParams": "button"
      },
      "documentHash": "1732733141331",
      "hasWarnings": false,
      "documentTypeName": "Doc"
    }
  }
}
